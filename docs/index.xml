<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zookeeper</title>
    <link>https://hello-world-example.github.io/Zookeeper/</link>
    <description>Recent content on Zookeeper</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://hello-world-example.github.io/Zookeeper/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/Zookeeper/_sidebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/Zookeeper/_sidebar/</guid>
      <description>  Quick-Start
 Docker 方式安装    Monitor
 四字命令    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/Zookeeper/docs/Monitor/4-letter-words/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/Zookeeper/docs/Monitor/4-letter-words/</guid>
      <description>四字命令 使用方式 $ echo mntr | nc localhost 2181 简介    命令 since Admin 简介     conf 3.3.0 configuration 查看服务配置   cons 3.3.0 connections 连接到服务器的 客户端的完全的连接 / 会话的详细信息包括 “接受 / 发送” 的包数量、会话 id 、操作延迟、最后的操作执行等等信息。   crst 3.3.0 connection_stat_reset 重置 cons   dump  dump 列出未完成会话和临时节点   envi  environment 服务端环境信息   ruok  ruok 服务处于正确状态 返回 imok ”，否则不做人任何返回         srvr  server_stats 性能统计信息   stat 3.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hello-world-example.github.io/Zookeeper/docs/Quick-Start/Install-by-Docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hello-world-example.github.io/Zookeeper/docs/Quick-Start/Install-by-Docker/</guid>
      <description>Docker 方式安装 准备 $ docker pull zookeeper:3.6.2 单实例 启动 $ docker run -d \  --name zoo \  -p 2181:2181 \  -p 8080:8080 \  -p 7070:7070 \  -e &amp;#34;ZOO_MY_ID=1&amp;#34; \  -e &amp;#34;ZOO_ADMINSERVER_ENABLED=true&amp;#34; \  -e &amp;#34;ZOO_4LW_COMMANDS_WHITELIST=*&amp;#34; \  \  -e &amp;#34;ZOO_CFG_EXTRA=metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7070&amp;#34; \  \  -v /private/docker/volumes/zookeeper/1/data:/data \  zookeeper:3.6.2 HTTP API # Admin $ curl http://localhost:8080/commands # Prometheus $ http://localhost:7070/metrics zkCli # Docker $ docker run -it --rm \ 	--link zoo:zk \ 	zookeeper:3.</description>
    </item>
    
  </channel>
</rss>